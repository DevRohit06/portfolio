---
import "../styles/global.css";
import "lenis/dist/lenis.css";
import Loader from "../components/Loader.astro";
import Seo from "../components/Seo.astro";
import { mainMetaData } from "../lib/metaData";
import { ClientRouter } from "astro:transitions";
interface Props {
  showLoader?: boolean;
  description?: string;
  title?: string;
}

const {
  showLoader = false,
  description = mainMetaData.description,
  title = mainMetaData.title,
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <meta
      name="description"
      content="Rohit Kushwaha - Software Engineer and Web Developer Portfolio"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap"
      rel="stylesheet"
    />
    <Seo {title} {description} />
    <meta name="theme-color" content="#C9CDD1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <title>{title}</title>
  </head>
  <body class="page-transition antialiased">
    {showLoader && <Loader />}
    <main>
      <slot />
    </main>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
    overflow: none;
  }

  .loading {
    overflow: hidden;
  }

  .page-transition {
    overflow: hidden;
  }

  main {
    opacity: 1; /* Will be animated by GSAP */
  }
</style>

<script>
  // Import GSAP and the cleanup function
  import { gsap } from "gsap";
  import { cleanupGSAPAnimations } from "../utils/animations.js";

  // Check if this is the first load of the site during this session
  const isFirstLoad = !sessionStorage.getItem("hasLoadedSite");

  // Initialize animations for page elements
  document.addEventListener("DOMContentLoaded", () => {
    if (!isFirstLoad) {
      const loaderWrapper = document.getElementById("loader-wrapper");
      // If not first load, remove the page-transition class immediately
      document.body.classList.remove("page-transition");
    }
    // The loading animation will be handled by the Loader component
  });

  // Handle Astro view transitions
  document.addEventListener("astro:page-load", () => {
    // For subsequent page loads, we want to remove any loading classes
    if (!isFirstLoad) {
      document.body.classList.remove("page-transition");
      document.body.classList.remove("loading");

      // Apply simple fade-in for page transitions without the loader
      const pageElements = document.querySelectorAll(
        "nav, main, section, footer, .hero-card, .bento, .experience"
      );

      gsap.fromTo(
        pageElements,
        { opacity: 0, y: 20 },
        {
          opacity: 1,
          y: 0,
          duration: 0.6,
          stagger: 0.08,
          ease: "power2.out",
        }
      );
    }
  });

  // Cleanup animations before navigating away
  document.addEventListener("astro:before-preparation", () => {
    console.log("Preparing for navigation, cleaning up GSAP animations");
    cleanupGSAPAnimations();
  });

  // Additional failsafe cleanup on any navigation events
  document.addEventListener("astro:after-swap", () => {
    // This runs after the new page content is in the DOM but before it's visible
    cleanupGSAPAnimations();

    // Make sure we're not blocking scrolling during transitions
    document.body.classList.remove("loading");
  });
</script>
