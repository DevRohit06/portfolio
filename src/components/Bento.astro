---
import Badge from "./Badge.astro";
import Testimonials from "./Testimonials.astro";
import DiscordActivity from "./DiscordActivity.astro";
import BentoItemGithubActivity from "./bento";
import Marquee from "./Marquee.astro";
---

<div
  class="w-[90%] md:w-[80%] lg:w-[70%] mx-auto mt-[50px] sm:mt/[100px] md:mt/[120px] lg:mt/[150px] xl:mt/[200px]"
>
  <div
    class="p-4 sm:p-6 lg:p-12 border border-[var(--border-color)] bento-wrapper opacity-0 invisible bento-container"
  >
    <div class="grid grid-cols-1 lg:grid-cols-8 gap-4 md:gap-6 lg:gap-8">
      <div class="col-span-1 lg:col-span-5 bento-left">
        <div class="flex flex-col gap-8 w-full">
          <BentoItemGithubActivity server:defer />

          <div class="gap-4 sm:gap-6 md:gap-8 bento-bottom-cards">
            <div
              class="h-full w-full relative flex flex-col gap-2 sm:gap-0 overflow-hidden hero-skills-section bento-scroll-reveal border border-[var(--border-color)]"
            >
              <div class="p-4 pb-1.5" data-delay="0.2">
                <Badge size="xs"
                  ><span class="whitespace-nowrap uppercase">
                    Okay so I am familiar with:
                  </span></Badge
                >
              </div>
              <div class="relative mb-2">
                <Marquee />
                <div
                  class="pointer-events-none absolute inset-y-0 left-0 w-1/4 bg-gradient-to-r from-[var(--bg-secondary)]"
                >
                </div>
                <div
                  class="pointer-events-none absolute inset-y-0 right-0 w-1/4 bg-gradient-to-l from-[var(--bg-secondary)]"
                >
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="col-span-1 lg:col-span-3 row-span-1 lg:row-span-2 gap-4 md:gap-6 lg:gap-8 mt-4 lg:mt-0 bento-right"
      >
        <div class="flex flex-col grid-row-3 gap-4 md:gap-6 lg:gap-8 w-full">
          <div
            class="bento-discord-card bento-scroll-reveal row-span-1"
            data-delay="0.1"
          >
            <DiscordActivity userId="743173584935190620" showButtons={true} />
          </div>
          <div
            class="bento-testimonials h-full bento-scroll-reveal row-span-2"
            data-delay="0.3"
          >
            <Testimonials />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { createMagneticEffect, createScene } from "../utils/animations.js";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    const bentoContainer = document.querySelector(".bento-container");
    if (!bentoContainer) return;

    // Add highlight elements to all cards for cursor-following effect
    const bentoCards = document.querySelectorAll(".bento-scroll-reveal");
    bentoCards.forEach((card) => {
      const highlight = document.createElement("div");
      highlight.className = "highlight-effect";
      card.appendChild(highlight);
    });

    // Performance optimization - detect if device is low-end
    const isLowEndDevice = () => {
      // Check if device has limited memory or CPU
      const isMemoryLimited =
        navigator.deviceMemory && navigator.deviceMemory < 4;
      const isCPULimited =
        navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4;

      // Check if mobile device (more likely to be low-end)
      const isMobile =
        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
          navigator.userAgent
        );

      return isMemoryLimited || isCPULimited || isMobile;
    };

    // Set animation quality based on device capability
    const lowPerformanceMode = isLowEndDevice();

    // Set initial state for elements with enhanced animations
    gsap.set(".bento-scroll-reveal", {
      opacity: 0,
      scale: lowPerformanceMode ? 0.95 : 0.9,
      y: lowPerformanceMode ? 20 : 30,
      rotationX: lowPerformanceMode ? 0 : 5,
      rotationY: lowPerformanceMode ? 0 : -3,
    });

    // Create a scroll trigger for the bento container animation with improved timing
    ScrollTrigger.create({
      trigger: bentoContainer,
      start: "top 80%", // Trigger earlier for better UX
      once: true, // Only trigger once
      onEnter: () => animateBento(),
    });

    function animateBento() {
      // Enhanced container reveal animation
      gsap.set(bentoContainer, {
        clipPath: "polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)",
        opacity: 1,
        visibility: "visible", // Make visible when animation starts
      });

      // Smoother container reveal with bounce effect
      const tl = gsap.timeline();

      tl.to(bentoContainer, {
        clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
        duration: 1.4,
        ease: "power3.inOut",
      }).fromTo(
        bentoContainer,
        { boxShadow: "0 0 0 rgba(0, 0, 204, 0)" },
        {
          boxShadow: "0 10px 30px rgba(0, 0, 204, 0.15)",
          duration: 1.2,
          ease: "power2.out",
        },
        "-=0.8"
      );

      // Enhanced staggered reveal for child elements with subtle 3D effect
      const elements = document.querySelectorAll(".bento-scroll-reveal");
      elements.forEach((element) => {
        const delay = element.getAttribute("data-delay")
          ? parseFloat(element.getAttribute("data-delay"))
          : 0;

        // Skip intensive animations for performance-critical elements
        const isPerformanceCritical = element.hasAttribute(
          "data-performance-critical"
        );

        // Random slight rotation for more natural appearance - reduce/skip for performance critical elements
        const randomRotX =
          isPerformanceCritical || lowPerformanceMode
            ? 0
            : Math.random() * 6 - 3;
        const randomRotY =
          isPerformanceCritical || lowPerformanceMode
            ? 0
            : Math.random() * 6 - 3;

        gsap.to(element, {
          opacity: 1,
          scale: 1,
          y: 0,
          rotationX: 0,
          rotationY: 0,
          duration: isPerformanceCritical ? 1.0 : 1.4,
          delay: 0.2 + delay,
          ease: "power3.out",
          clearProps: isPerformanceCritical ? "opacity,scale,y" : "transform",
          onComplete: () => {
            // Add subtle continuous movement - skip for performance-critical elements
            if (
              !window.matchMedia("(prefers-reduced-motion: reduce)").matches &&
              !isPerformanceCritical &&
              !lowPerformanceMode
            ) {
              // gsap.to(element, {
              //   y: "+=3",
              //   duration: 2 + Math.random() * 1.5,
              //   yoyo: true,
              //   repeat: -1,
              //   ease: "sine.inOut",
              //   delay: Math.random() * 0.5,
              // });
            }
          },
        });

        // Enhanced glow effect with better timing - skip for performance critical elements
        // if (!isPerformanceCritical && !lowPerformanceMode) {
        //   gsap.fromTo(
        //     element,
        //     { boxShadow: "0 0 0 rgba(0, 0, 204, 0)" },
        //     {
        //       boxShadow:
        //         "0 8px 25px rgba(0, 0, 204, 0.18), 0 0 0 rgba(0, 0, 204, 0)",
        //       duration: 1.8,
        //       delay: 0.4 + delay,
        //       ease: "power2.out",
        //       clearProps: "boxShadow",
        //     }
        //   );
        // }
      });

      // Enhanced magnetic effect to interactive elements with better sensitivity - skip in low performance mode
      if (!lowPerformanceMode) {
        createMagneticEffect(".badge-icon", 0.4);
        // createMagneticEffect(".bento-github-card a", 0.4);
      }

      // Create improved scene for advanced animations
      // createScene(
      //   ".bento-wrapper",
      //   [
      //     {
      //       element: ".bento-github-card",
      //       props: {
      //         x: 0,
      //         rotation: 0,
      //         transformOrigin: "center center",
      //       },
      //     },
      //     {
      //       element: ".bento-testimonials",
      //       props: {
      //         x: 0,
      //         rotation: 0,
      //         transformOrigin: "center center",
      //       },
      //       position: "-=0.3",
      //     },
      //   ],
      //   {
      //     start: "top 60%",
      //     end: "bottom 40%",
      //     scrub: 1.2, // Smoother scrubbing
      //     markers: false,
      //   }
      // );

      // Add enhanced hover effects to all cards
      // const bentoCards = document.querySelectorAll(".bento-scroll-reveal");
      // bentoCards.forEach((card) => {
      //   const isPerformanceCritical = card.hasAttribute(
      //     "data-performance-critical"
      //   );

      //   // Skip intensive hover animations for GitHub activity card
      //   if (isPerformanceCritical && lowPerformanceMode) return;

      //   card.addEventListener("mouseenter", () => {
      //     // Find the pseudo-element highlight if present
      //     const highlightEl = card.querySelector(".highlight-effect");

      //     gsap.to(card, {
      //       scale: isPerformanceCritical ? 1.01 : 1.03, // Reduced scale for GitHub activity
      //       boxShadow: isPerformanceCritical
      //         ? "0 10px 25px rgba(0, 0, 204, 0.15)"
      //         : "0 15px 40px rgba(0, 0, 204, 0.2)",
      //       y: isPerformanceCritical ? -4 : -8, // Reduced movement for GitHub activity
      //       duration: isPerformanceCritical ? 0.4 : 0.5,
      //       ease: "power2.out",
      //     });

      //     // Add subtle highlight animation
      //     if (highlightEl && !isPerformanceCritical) {
      //       gsap.to(highlightEl, {
      //         opacity: 0.6,
      //         duration: 0.4,
      //       });
      //     }

      //     // Apply rotation only for non-performance-critical elements
      //     if (!isPerformanceCritical) {
      //       // Calculate rotation based on card position relative to viewport center
      //       const rect = card.getBoundingClientRect();
      //       const cardCenterX = rect.left + rect.width / 2;
      //       const windowCenterX = window.innerWidth / 2;
      //       const rotationY = (cardCenterX - windowCenterX) * 0.008; // Reduced intensity

      //       gsap.to(card, {
      //         rotationY: rotationY,
      //         rotationX: -1.5, // Reduced intensity
      //         duration: 0.5,
      //         ease: "power3.out",
      //       });
      //     }
      //   });

      //   card.addEventListener("mousemove", (e) => {
      //     // Skip intensive mousemove animations for performance-critical elements
      //     if (isPerformanceCritical) return;

      //     // More natural and responsive mouse movement
      //     const rect = card.getBoundingClientRect();
      //     const mouseX = e.clientX - rect.left;
      //     const mouseY = e.clientY - rect.top;

      //     const centerX = rect.width / 2;
      //     const centerY = rect.height / 2;

      //     // Reduce rotation intensity for more subtle effect
      //     const rotateY =
      //       ((mouseX - centerX) / 35) * Math.min(1, rect.width / 500);
      //     const rotateX =
      //       ((centerY - mouseY) / 35) * Math.min(1, rect.height / 500);

      //     gsap.to(card, {
      //       rotateY: rotateY,
      //       rotateX: rotateX,
      //       duration: 0.4,
      //       ease: "power1.out", // Smoother response
      //       overwrite: "auto", // Prevent animation queue buildup
      //     });

      //     // Add subtle highlight following cursor
      //     const highlightEl = card.querySelector(".highlight-effect");
      //     if (highlightEl) {
      //       gsap.to(highlightEl, {
      //         x: mouseX,
      //         y: mouseY,
      //         duration: 0.3,
      //         ease: "power1.out",
      //       });
      //     }
      //   });

      //   card.addEventListener("mouseleave", () => {
      //     // Smoother return to original state
      //     gsap.to(card, {
      //       scale: 1,
      //       boxShadow: "0 5px 15px rgba(0, 0, 0, 0.08)",
      //       y: 0,
      //       rotateX: 0,
      //       rotateY: 0,
      //       duration: isPerformanceCritical ? 0.6 : 0.9, // Faster animation for GitHub activity
      //       ease: isPerformanceCritical ? "power2.out" : "power4.out",
      //     });

      //     // Fade out highlight for non-performance-critical elements
      //     if (!isPerformanceCritical) {
      //       const highlightEl = card.querySelector(".highlight-effect");
      //       if (highlightEl) {
      //         gsap.to(highlightEl, {
      //           opacity: 0,
      //           duration: 0.6,
      //         });
      //       }
      //     }
      //   });
      // });

      // Add subtle floating effect to selected elements with varied movement
      // if (!lowPerformanceMode) {
      //   const floatingElements = [".bento-testimonials button"];

      //   floatingElements.forEach((selector, index) => {
      //     const elements = document.querySelectorAll(selector);
      //     elements.forEach((element) => {
      //       if (window.matchMedia("(prefers-reduced-motion: reduce)").matches)
      //         return;

      //       const delay = index * 0.3 + Math.random() * 0.3;
      //       const direction = index % 2 === 0 ? 1 : -1;
      //       const amplitude = 3 + Math.random() * 3; // Varied movement amplitude

      //       // Use a more complex animation with rotation
      //       gsap.to(element, {
      //         y: direction * amplitude,
      //         rotation: direction * 0.5, // Very subtle rotation
      //         duration: 2.5 + index * 0.4,
      //         repeat: -1,
      //         yoyo: true,
      //         ease: "sine.inOut",
      //         delay: delay,
      //       });
      //     });
      //   });
      // }
    }

    // Enhanced parallax scroll effect with depth - simplified for performance
    // ScrollTrigger.create({
    //   trigger: bentoContainer,
    //   start: "top bottom",
    //   end: "bottom top",
    //   scrub: lowPerformanceMode ? 0.5 : 1.5, // Adjust scrub for performance
    //   onUpdate: (self) => {
    //     const progress = self.progress;
    //     const yPos = (1 - progress) * (lowPerformanceMode ? 25 : 35); // Reduced movement for low-end devices

    //     // Apply different parallax speeds to different elements for depth
    //     gsap.to(".bento-container", {
    //       y: yPos,
    //       ease: "none",
    //       overwrite: "auto",
    //     });

    //     // Skip additional parallax for nested elements in low performance mode
    //     if (!lowPerformanceMode) {
    //       gsap.to(".bento-left", {
    //         y: yPos * 0.7, // Different speed for layered effect
    //         ease: "none",
    //         overwrite: "auto",
    //       });

    //       gsap.to(".bento-right", {
    //         y: yPos * 1.2, // Different speed for layered effect
    //         ease: "none",
    //         overwrite: "auto",
    //       });
    //     }
    //   },
    // });

    // Add event listener to pause animations when scrolling for better performance
    let scrollTimeout;
    window.addEventListener(
      "scroll",
      () => {
        // Mark document as scrolling
        document.body.classList.add("is-scrolling");

        // Clear previous timeout
        clearTimeout(scrollTimeout);

        // Set timeout to remove class when scrolling stops
        scrollTimeout = setTimeout(() => {
          document.body.classList.remove("is-scrolling");
        }, 100);
      },
      { passive: true }
    );
  });
</script>

<style>
  .bento-container {
    will-change: transform, clip-path, opacity, visibility;
    transform-style: preserve-3d; /* Better 3D effects */
    perspective: 1000px; /* Add perspective for 3D effects */
  }

  .bento-scroll-reveal {
    will-change: transform, opacity;
    transition: box-shadow 0.4s ease;
    transform-style: preserve-3d;
    position: relative;
    overflow: hidden;
  }

  /* Pause animations while scrolling for better performance */
  body.is-scrolling .highlight-effect {
    display: none;
  }

  /* Enhanced subtle hover effect on card borders */
  .bento-scroll-reveal::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      transparent 96%,
      rgba(var(--accent-primary-rgb, 7, 7, 172), 0.3) 100%
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    pointer-events: none;
  }

  /* Don't add border effects to performance-critical elements */
  .bento-scroll-reveal[data-performance-critical="true"]::before {
    display: none;
  }

  .bento-scroll-reveal:hover::before {
    opacity: 0.6;
  }

  .bento-scroll-reveal::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(var(--accent-primary-rgb, 7, 7, 172), 0.5),
      transparent
    );
    opacity: 0;
    transition: opacity 0.6s;
    transform: translateY(2px);
  }

  /* Don't add border effects to performance-critical elements */
  .bento-scroll-reveal[data-performance-critical="true"]::after {
    display: none;
  }

  .bento-scroll-reveal:hover::after {
    opacity: 1;
    transform: translateY(0);
  }

  /* Add highlight element for mouse following effect */
  .bento-scroll-reveal .highlight-effect {
    position: absolute;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    background: radial-gradient(
      circle,
      rgba(var(--accent-primary-rgb, 7, 7, 172), 0.15) 0%,
      transparent 70%
    );
    opacity: 0;
    pointer-events: none;
    transform: translate(-50%, -50%);
    mix-blend-mode: screen;
  }

  /* Don't add highlight effects to performance-critical elements */
  .bento-scroll-reveal[data-performance-critical="true"] .highlight-effect {
    display: none;
  }

  .badge-icon {
    will-change: transform;
    transition: transform 0.4s ease;
  }

  @media (prefers-reduced-motion: reduce) {
    .bento-container {
      opacity: 1;
      visibility: visible;
      clip-path: none;
    }

    .bento-scroll-reveal {
      opacity: 1;
      transform: none !important;
      transition: none !important;
    }

    .floating-animation {
      animation: none !important;
    }
  }
</style>
