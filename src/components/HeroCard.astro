---
import Badge from "./Badge.astro";
import LiveClock from "./svelte/LiveClock.svelte";
import { socials } from "../lib/socials";
import Pfp from "../assets/rohit.webp";
import { Image } from "astro:assets";
import SocialIcons from "./SocialIcons.astro";
---

<div class="hero-container relative">
  <div
    class="p-4 sm:p-6 md:p-12 relative border border-[var(--border-color)] hero-title-section"
  >
    <div class="size-4 bg-[var(--border-color)] absolute -top-2 -left-2"></div>
    <div class="flex flex-col sm:flex-row sm:items-end gap-2 sm:gap-0">
      <h1
        class="text-3xl pb-[4px] sm:text-4xl md:text-5xl lg:text-6xl font-semibold hero-title split-text"
      >
        A Vibe engineer*
      </h1>
      <span
        class="text-sm sm:text-md md:text-lg text-[var(--text-secondary)] hero-subtitle"
        >/ Software Engineer</span
      >
    </div>
    <div
      class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-6 hero-badges"
    >
      <Badge size="lg" text="I believe in tech you use" />
      <Badge size="lg" text="Ambernath, India">
        <div
          class="animate-pulse bg-[var(--accent-primary)] size-2 rounded-full"
        >
        </div>
      </Badge>
    </div>
  </div>
  <div class="border border-[var(--border-color)] border-t-0 hero-info-section">
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-11 relative">
      <div class="sm:col-span-1 md:col-span-3">
        <div class="border border-[var(--border-color)] hero-image relative">
          <Image
            src={Pfp}
            loading="eager"
            decoding="async"
            alt="Rohit Kushwaha"
            class="object-cover w-full aspect-square"
          />
          <div
            class="bg-black/50 flex justify-center items-center absolute inset-0 backdrop-blur-[1px] font-medium text-white opacity-0 hero-image-overlay"
          >
            <span class="text-lg">Rohit K.</span>
          </div>
        </div>
      </div>
      <div class="sm:col-span-1 md:col-span-8 p-4 sm:p-6 md:p-12 hero-content">
        <Badge size="sm">
          <span class="text-xs font-bold uppercase">Hello</span>
        </Badge>
        <h2 class="text-2xl sm:text-3xl md:text-4xl mt-6 hero-name split-text">
          Rohit Kushwaha
        </h2>
        <div class="bio-wrapper overflow-hidden mt-4">
          <p class="text-sm sm:text-base md:text-lg hero-bio">
            I'm a passionate Full Stack Developer and vibe engineer who
            transforms ideas into innovative, scalable solutions. With expertise
            in SvelteKit, Astro, React, Next.js, and TailwindCSS, I craft
            pixel-perfect interfaces with an intuitive feel.
          </p>
          <!-- <p class="text-sm sm:text-base md:text-lg mt-3 hero-bio-2">
            Currently pursuing a BSc in Computer Science at <a
              href="https://www.chmcollege.in/"
              target="_blank"
              class="text-[var(--accent-primary)] hover:underline"
              >SMT. CHM College</a
            > (2023-2026) while working at
            <a
              href="https://www.qbtrix.com"
              class="text-[var(--accent-primary)] hover:underline">Qbtrix</a
            >, I blend theoretical knowledge with hands-on experience to stay at
            the forefront of technology.
          </p> -->
        </div>
      </div>
    </div>
  </div>
  <div
    class="border border-[var(--border-color)] border-t-0 px-4 sm:px-6 md:px-10 py-4 sm:py-6 flex flex-col justify-between sm:flex-row gap-2 sm:gap-0 overflow-hidden hero-skills-section"
  >
    <Badge size="sm"
      ><span
        class="font-bold whitespace-nowrap text-xs px-3 sm:text-sm uppercase"
      >
        Connect with me
      </span></Badge
    >
    <div
      class="social-icons-container flex flex-wrap items-center gap-3 sm:gap-4 ml-0 sm:ml-4 mt-3 sm:mt-0"
    >
      <SocialIcons size="lg" />
    </div>
  </div>

  <script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    import { SplitText } from "gsap/SplitText";

    gsap.registerPlugin(ScrollTrigger, SplitText);

    const initAnimations = () => {
      // Create main timeline for hero animations
      const mainTl = gsap.timeline({
        delay: 0.2,
        defaults: {
          ease: "power3.out",
          duration: 0.7,
        },
        onStart: () => {
          // Make container visible when animation starts
          gsap.set(".hero-container", {
            visibility: "visible",
            opacity: 1,
          });
        },
      });

      // Hide everything initially
      gsap.set(".hero-container", {
        visibility: "hidden",
        opacity: 0,
      });

      gsap.set(
        [".hero-title-section", ".hero-info-section", ".hero-skills-section"],
        {
          opacity: 0,
          y: 20,
        }
      );

      // Split text for character animations
      const titleSplitter = new SplitText(".hero-title", { type: "chars" });
      const nameSplitter = new SplitText(".hero-name", { type: "chars" });

      // Start by making container visible
      mainTl.to(".hero-container", {
        visibility: "visible",
        opacity: 1,
        duration: 0.3,
      });

      // Animate title section
      mainTl
        .to(".hero-title-section", {
          opacity: 1,
          y: 0,
        })
        .to(
          titleSplitter.chars,
          {
            opacity: 1,
            y: 0,
            stagger: 0.015,
            duration: 0.5,
            ease: "power2.out",
          },
          "-=0.4"
        )
        .to(
          ".hero-subtitle",
          {
            opacity: 1,
            x: 0,
            duration: 0.5,
          },
          "-=0.3"
        )
        .to(
          ".hero-badges > *",
          {
            opacity: 1,
            y: 0,
            stagger: 0.1,
            duration: 0.4,
          },
          "-=0.3"
        );

      // Animate info section
      mainTl
        .to(
          ".hero-info-section",
          {
            opacity: 1,
            y: 0,
            duration: 0.8,
          },
          "-=0.2"
        )
        .to(
          ".hero-image",
          {
            clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
            scale: 1,
            duration: 0.9,
          },
          "-=0.6"
        )
        .to(
          nameSplitter.chars,
          {
            opacity: 1,
            y: 0,
            stagger: 0.015,
            duration: 0.5,
          },
          "-=0.7"
        )
        .to(
          ".hero-bio, .hero-bio-2, .hero-bio-3",
          {
            opacity: 1,
            y: 0,
            stagger: 0.2,
            duration: 0.6,
          },
          "-=0.5"
        );

      // Animate skills section
      mainTl
        .to(
          ".hero-skills-section",
          {
            opacity: 1,
            y: 0,
            duration: 0.6,
          },
          "-=0.3"
        )
        .to(
          ".social-icon-link",
          {
            opacity: 1,
            scale: 1,
            stagger: 0.05,
            duration: 0.4,
            ease: "back.out(1.5)",
          },
          "-=0.4"
        );

      // Create scroll-based animations
      ScrollTrigger.create({
        trigger: ".hero-container",
        start: "top top",
        end: "bottom top-=300",
        scrub: true,
        onUpdate: (self) => {
          // Enhanced parallax effect
          const progress = self.progress;
          gsap.to(".hero-title-section", {
            y: progress * -25,
            duration: 0.1,
            ease: "none",
          });
          gsap.to(".hero-info-section", {
            y: progress * -20,
            duration: 0.1,
            ease: "none",
          });
          gsap.to(".hero-skills-section", {
            y: progress * -15,
            duration: 0.1,
            ease: "none",
          });
        },
      });

      // Add hover animations for social icons
      gsap.utils.toArray(".social-icon-link").forEach((icon) => {
        icon.addEventListener("mouseenter", () => {
          gsap.to(icon, {
            scale: 1.15,
            color: getComputedStyle(document.documentElement)
              .getPropertyValue("--accent-primary")
              .trim(),
            duration: 0.3,
            ease: "power2.out",
          });
        });

        icon.addEventListener("mouseleave", () => {
          gsap.to(icon, {
            scale: 1,
            color: getComputedStyle(document.documentElement)
              .getPropertyValue("--text-secondary")
              .trim(),
            duration: 0.3,
            ease: "power2.in",
          });
        });
      });
    };

    // Initialize animations when DOM is ready
    document.addEventListener("DOMContentLoaded", () => {
      // Check if GSAP is loaded and elements exist
      if (gsap && document.querySelector(".hero-container")) {
        // Small delay to ensure all resources are loaded
        setTimeout(initAnimations, 100);
      }
    });
  </script>

  <style>
    /* Essential styling */
    .hero-container {
      perspective: 1000px;
      visibility: hidden; /* Hide entire container initially */
      opacity: 0; /* Start completely invisible */
    }

    /* Hero sections with initial state */
    .hero-title-section,
    .hero-info-section,
    .hero-skills-section {
      opacity: 0;
    }

    /* Style for split text characters */
    .hero-title,
    .hero-name {
      overflow: hidden;
    }

    /* Image animation setup */
    .hero-image {
      overflow: hidden;
      clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%);
      transform: scale(0.95);
    }

    /* Bio wrapper for text reveal */
    .bio-wrapper {
      overflow: hidden;
    }

    .hero-bio,
    .hero-bio-2,
    .hero-bio-3 {
      opacity: 0;
      transform: translateY(20px);
    }

    /* Social icon animations */
    .social-icon-link {
      opacity: 0;
      transform: scale(0.8);
      transition: color 0.3s ease;
    }

    .social-icon-wrapper {
      will-change: transform;
    }

    /* Transition classes for animations */
    .hero-container.loaded {
      visibility: visible;
      opacity: 1;
      transition: opacity 0.3s ease-out;
    }

    /* Responsive adjustments */
    @media (max-width: 640px) {
      .hero-content,
      .hero-skills-section {
        padding: 1rem;
      }
    }
  </style>
</div>

<script>
  // Quick script to handle visibility
  window.addEventListener("load", () => {
    setTimeout(() => {
      document.querySelector(".hero-container")?.classList.add("loaded");
    }, 100);
  });
</script>
