---
import Badge from "./Badge.astro";
import ExperienceToggler from "./svelte/ExperienceToggler.svelte";

// Define props with default values
interface Props {
  title?: string;
}

const { title = "EXPERIENCE:" } = Astro.props;
---

<div class="experience-section relative pt-14" id="experience">
  <div class="absolute bottom-0 w-full -z-10">
    <div class="border-t border-[#7B7B7B] h-24 w-full"></div>
    <div class="border-t border-[#7B7B7B] h-24 w-full"></div>
    <div class="border-t border-[#7B7B7B] h-24 w-full"></div>
  </div>
  <div class="experience-content">
    <div class="flex w-full justify-center">
      <Badge size="sm">Experience: </Badge>
    </div>
    <ExperienceToggler client:load />
  </div>

  <script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    import {
      createSectionTransition,
      createScene,
    } from "../utils/animations.js";

    gsap.registerPlugin(ScrollTrigger);

    document.addEventListener("DOMContentLoaded", () => {
      const experienceSection = document.querySelector(".experience-section");
      if (!experienceSection) return;

      // Create initial state with simpler setup
      gsap.set(".experience-heading", { opacity: 0, y: 20 });
      gsap.set(".experience-line", {
        scaleX: 0,
        transformOrigin: "left center",
      });
      gsap.set(".experience-content", { opacity: 0, y: 30 });

      // Create scroll-triggered animations with a timeline - simplified for better performance
      const experienceTl = gsap.timeline({
        scrollTrigger: {
          trigger: experienceSection,
          start: "top 75%",
          end: "top 50%",
          toggleActions: "play none none none",
        },
      });

      // Simple content reveal - removed complex animations
      experienceTl
        .to(".experience-heading", {
          opacity: 1,
          y: 0,
          duration: 0.6,
          ease: "power2.out",
        })
        .to(
          ".experience-line",
          {
            scaleX: 1,
            duration: 0.7,
            ease: "power1.inOut",
          },
          "-=0.3"
        )
        .to(
          ".experience-content",
          {
            opacity: 1,
            y: 0,
            duration: 0.7,
            ease: "power2.out",
          },
          "-=0.4"
        );

      // Simple scroll-based animation - removed parallax effects
      // ScrollTrigger.create({
      //   trigger: experienceSection,
      //   start: "top bottom",
      //   end: "bottom top",
      //   scrub: true,
      //   onUpdate: (self) => {
      //     // Simplified movement for better performance across devices
      //     const progress = self.progress;
      //     gsap.set(experienceSection, {
      //       y: Math.min(progress * 15, 15),
      //       ease: "none",
      //     });
      //   },
      // });

      // Simplified highlight effect when experiences are clicked - removed hover effects
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (
            mutation.type === "attributes" &&
            mutation.attributeName === "class"
          ) {
            const target = mutation.target as HTMLElement;
            if (
              target.classList.contains("active") ||
              target.classList.contains("bg-[#0000CC]")
            ) {
              // Simple highlight animation
              gsap.killTweensOf(target);
              gsap.fromTo(
                target,
                {
                  opacity: 0.9,
                  x: -3,
                },
                {
                  opacity: 1,
                  x: 0,
                  duration: 0.3,
                  ease: "power1.out",
                }
              );
            }
          }
        });
      });

      // Observe changes in experience items
      const experienceButtons = document.querySelectorAll(
        ".experience-section button"
      );
      experienceButtons.forEach((button) => {
        observer.observe(button, { attributes: true });
      });
    });
  </script>

  <style>
    .experience-section {
      margin: 8rem auto 0;
      position: relative;
      will-change: transform;
    }

    .experience-heading-container {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .experience-heading {
      background-color: #c9cdd1;
      color: #7b7b7b;
      padding: 0.5rem 1rem;
      border: 1px solid #7b7b7b;
      font-weight: 500;
      position: relative;
      z-index: 2;
      will-change: transform, opacity;
    }

    .experience-line {
      height: 1px;
      background-color: #7b7b7b;
      flex-grow: 1;
      will-change: transform;
    }

    .experience-content {
      position: relative;
      z-index: 1;
      will-change: opacity;
    }

    /* Removed pulse animation - no hover effects as requested */
  </style>
</div>
