---
import "../styles/global.css";
import "lenis/dist/lenis.css";
import Loader from "../components/Loader.astro";
import Seo from "../components/Seo.astro";
import { mainMetaData } from "../lib/metaData";
import { ClientRouter } from "astro:transitions";
interface Props {
  showLoader?: boolean;
  description?: string;
  title?: string;
}

const {
  showLoader = false,
  description = mainMetaData.description,
  title = mainMetaData.title,
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <meta
      name="description"
      content="Rohit Kushwaha - Software Engineer and Web Developer Portfolio"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap"
      rel="stylesheet"
    />
    <Seo {title} {description} />
    <meta name="theme-color" content="#C9CDD1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <title>{title}</title>
  </head>
  <body class="loading">
    {showLoader && <Loader />}
    <main>
      <slot />
    </main>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
    overflow: none;
  }

  .loading {
    overflow: hidden;
  }

  main {
    opacity: 1; /* Will be animated by GSAP */
  }
</style>

<script>
  // Import GSAP
  import { gsap } from "gsap";

  // Initialize animations for page elements that load after the loader animation
  document.addEventListener("DOMContentLoaded", () => {
    // This will be triggered by the Loader component's timeline
    // The initial state of elements is set in the Loader component
    // The loading class will be removed by the Loader component
  });
</script>
